name: Build Releases

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build: [regular, glibc217]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake build-essential binutils

      - name: Install Zig (for glibc217)
        if: matrix.build == 'glibc217'
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.13.0

      - name: Build ${{ matrix.build }}
        run: |
          case "${{ matrix.build }}" in
            regular)
              make clean && make release
              ;;
            glibc217)
              make clean && make release-glibc217
              ;;
          esac

      - name: ABI check
        run: |
          case "${{ matrix.build }}" in
            regular)
              objdump -p bin/skald | sed -n 's/^\s*GLIBC_/GLIBC_/p' | sort -u || true
              ;;
            glibc217)
              objdump -p bin/skald | sed -n 's/^\s*GLIBC_/GLIBC_/p' | sort -u || true
              ;;
          esac

      - name: Rename binary for artifact
        run: |
          case "${{ matrix.build }}" in
            regular)
              cp bin/skald bin/skald-regular
              ;;
            glibc217)
              cp bin/skald bin/skald-glibc217
              ;;
          esac

      - name: Upload artifact (regular)
        if: matrix.build == 'regular'
        uses: actions/upload-artifact@v4
        with:
          name: skald-regular-${{ github.ref_name }}-linux-amd64
          path: bin/skald-regular

      - name: Upload artifact (glibc217)
        if: matrix.build == 'glibc217'
        uses: actions/upload-artifact@v4
        with:
          name: skald-glibc217-${{ github.ref_name }}-linux-amd64
          path: bin/skald-glibc217

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: skald-*-linux-amd64
          path: dist
          merge-multiple: true

      - name: List artifacts
        run: ls -la dist

      - name: Create GitHub Release and attach artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/skald-regular
            dist/skald-glibc217
          token: ${{ secrets.GITHUB_TOKEN }}

